print "----------------------------------------------------"
print "                 JMeter Testing"
print "----------------------------------------------------"

node('master'){

  workspace = pwd()   // Set the main workspace in your Jenkins agent

  echo workspace
  authToken = "cL1bn4TXVINKagzl18bcY9shvQXBzqWe-alwCrzIjc4"      // Get your user auth token for OpenShift
  apiURL = "https://192.168.2.37:8443"         // URL for your OpenShift cluster API

  gitUser = "mohhef"        // Set your Git username
  gitPass = "Dontgetangry1."        // Set your Git password
  gitURL = "https://github.com/mohhef/jmeter-test"         // Set the URL of your test suite repo
  gitName = "jmeter-test"        // Set the name of your test suite repo
  gitBranch = "master"      // Set the branch of your test suite repo

  // Set location of OpenShift objects in workspace
  buildConfigPath = "${workspace}/${gitName}/build-config.yaml"
  imageStreamPath = "${workspace}/${gitName}/image-stream.yaml"
  jobTemplatePath = "${workspace}/${gitName}/job-template.yaml"

  project = "jmeter-test"    // Set the OpenShift project you're working in
  testSuiteName = "jmeter-test-suite"   // Name of the job/build/imagestream

  //Login to the OpenShift cluster
  bat """
      set +x
      oc login --insecure-skip-tls-verify=true --token=${authToken} ${apiURL}
  """

  // Checkout the test suite repo into your Jenkins agent workspace
  // You can also use the "checkout scm" Jenkins step here if you like
  int slashIdx = gitURL.indexOf("://")
  String urlWithCreds = gitURL.substring(0, slashIdx + 3) +
          "\"${gitUser}:${gitPass}\"@" + gitURL.substring(slashIdx + 3);

  sh """
    rm -rf ${workspace}/${gitName}
    git clone -b ${gitBranch} ${urlWithCreds} ${gitName}
    echo `pwd && ls -l`
  """

  // Create your ImageStream and BuildConfig in OpenShift
  // Then start the build for the test suite image
  sh """
    oc apply -f ${imageStreamPath} -n ${project}
    oc apply -f ${buildConfigPath} -n ${project}
    oc start-build ${testSuiteName} -n ${project} --follow
  """
}